# ./vendor/bin/ece-docker 'build:compose' --mode=developer --php='8.1' --nginx='1.19' --expose-db-port=3306 --no-varnish
version: "2.1"
services:
  db:
    hostname: db.magento2.docker
    image: "mariadb:10.3"
    shm_size: 2gb
    environment:
      - MYSQL_ROOT_PASSWORD=magento2
      - MYSQL_DATABASE=magento2
      - MYSQL_USER=magento2
      - MYSQL_PASSWORD=magento2
    ports:
      - "3306:3306"
    volumes:
      - "./magento:/app:delegated"
      - "./.docker:/.docker"
      - "mymagento-magento-db:/var/lib/mysql"
    healthcheck:
      test: "mysqladmin ping -h localhost -pmagento2"
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      magento:
        aliases:
          - db.magento2.docker
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    links:
      - db
    environment:
      PMA_HOST: db.magento2.docker
      PMA_USER: "root"
      PMA_PASSWORD: "magento2"
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    ports:
      - 8081:80
    volumes:
      - "./.docker/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini"
    networks:
      magento:
        aliases:
          - db.magento2.docker
  redis:
    hostname: redis.magento2.docker
    image: "redis:7.0"
    volumes:
      - "./magento:/app:delegated"
      - "./.docker:/.docker"
    ports:
      - 6379
    sysctls:
      net.core.somaxconn: 1024
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
    healthcheck:
      test: "redis-cli ping || exit 1"
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      magento:
        aliases:
          - redis.magento2.docker
  elasticsearch:
    hostname: elasticsearch.magento2.docker
    image: "magento/magento-cloud-docker-elasticsearch:7.10-1.3.2"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
    networks:
      magento:
        aliases:
          - elasticsearch.magento2.docker
  fpm:
    hostname: fpm.magento2.docker
    image: "magento/magento-cloud-docker-php:8.2-fpm-1.4.0"
    extends: generic
    volumes:
      - "./magento:/app:delegated"
      - "./.docker:/.docker"
    networks:
      magento:
        aliases:
          - fpm.magento2.docker
    depends_on:
      db:
        condition: service_healthy
  web:
    hostname: web.magento2.docker
    image: "magento/magento-cloud-docker-nginx:1.24-1.3.6"
    extends: generic
    volumes:
      - "./magento:/app:delegated"
      - "./.docker:/.docker"
    environment:
      - WITH_XDEBUG=0
      - NGINX_WORKER_PROCESSES=1
      - NGINX_WORKER_CONNECTIONS=1024
    networks:
      magento:
        aliases:
          - web.magento2.docker
    depends_on:
      fpm:
        condition: service_started
  tls:
    hostname: tls.magento2.docker
    image: "magento/magento-cloud-docker-nginx:1.24-1.3.6"
    extends: generic
    networks:
      magento:
        aliases:
          - magento2.docker
    environment:
      - NGINX_WORKER_PROCESSES=1
      - NGINX_WORKER_CONNECTIONS=1024
      - UPSTREAM_HOST=web
      - UPSTREAM_PORT=8080
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      web:
        condition: service_started
  generic:
    hostname: generic.magento2.docker
    image: "magento/magento-cloud-docker-php:8.2-cli-1.4.0"
    env_file: ./.docker/config.env
    environment:
      - MAGENTO_RUN_MODE=developer
      - "PHP_EXTENSIONS=bcmath bz2 calendar exif gd gettext intl mysqli pcntl pdo_mysql soap sockets sysvmsg sysvsem sysvshm opcache zip xsl sodium"
  deploy:
    hostname: deploy.magento2.docker
    image: "magento/magento-cloud-docker-php:8.2-cli-1.4.0"
    extends: generic
    volumes:
      - "./magento:/app:delegated"
      - "./.docker:/.docker"
    networks:
      magento:
        aliases:
          - deploy.magento2.docker
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
  mailhog:
    hostname: mailhog.magento2.docker
    image: "mailhog/mailhog:latest"
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      magento:
        aliases:
          - mailhog.magento2.docker
  cron:
    hostname: cron.magento2.docker
    image: "magento/magento-cloud-docker-php:8.2-cli-1.4.0"
    extends: generic
    command: run-cron
    environment:
      CRONTAB: "* * * * * root cd /app && /usr/local/bin/php bin/magento cron:run >> /app/var/log/cron.log"
    volumes:
      - "./magento:/app:delegated"
      - "./.docker:/.docker"
    networks:
      magento:
        aliases:
          - cron.magento2.docker
    depends_on:
      db:
        condition: service_healthy
  fpm_xdebug:
    hostname: fpm_xdebug.magento2.docker
    image: "magento/magento-cloud-docker-php:8.2-fpm-1.4.0"
    extends: generic
    volumes:
      - "./magento:/app:delegated"
      - "./.docker:/.docker"
      - "./.docker/xdebug.ini:/usr/local/etc/php/conf.d/zz-xdebug-settings.ini"
    environment:
      - "PHP_EXTENSIONS=bcmath bz2 calendar exif gd gettext intl mysqli pcntl pdo_mysql soap sockets sysvmsg sysvsem sysvshm opcache zip xsl sodium xdebug"
      - "XDEBUG_CONFIG= idekey=PHPSTORM remote_host=172.17.0.1 remote_port=9002"
    networks:
      magento:
        aliases:
          - fpm_xdebug.magento2.docker
    depends_on:
      db:
        condition: service_started
volumes:
  mymagento-magento-db: {}
networks:
  magento:
    driver: bridge
